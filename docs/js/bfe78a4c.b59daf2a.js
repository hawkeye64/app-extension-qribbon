(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["bfe78a4c"],{2514:function(t,e,o){"use strict";var a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",[o("section",{staticClass:"page-header"},[o("div",{staticClass:"text-h1 project-name"},[t._v("QRibbon")]),o("div",{staticClass:"text-h2 project-tagline"},[t._v("Embeddable Ribbons for your Quasar App")]),t._m(0),o("div",{staticClass:"quasar"},[t._v("A Quasar Framework Component and App Extension")]),t._m(1),o("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://github.com/quasarframework/quasar-ui-qribbon",target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{to:"/builder",label:"Interactive Demo","no-caps":"",flat:""}}),o("q-btn",{staticClass:"btn",attrs:{type:"a",href:"https://github.com/users/webnoob/sponsorship",target:"_blank",label:"Donate","no-caps":"",flat:""}})],1),o("main",{staticClass:"flex flex-start justify-center inset-shadow"},[o("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),o("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg bg-white shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[t._t("default")],2)])])},n=[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"byline"},[t._v("Created and maintained by Allan Gaunt "),o("a",{attrs:{href:"https://twitter.com/originalwebnoob",target:"_blank",title:"Twitter"}},[o("i",{staticClass:"fab fa-twitter"})])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"donate"},[o("a",{attrs:{href:"https://github.com/sponsors/webnoob",target:"_blank",title:"Donate"}},[o("i",{staticClass:"fas fa-heart",staticStyle:{color:"white"}})])])}],r={name:"Hero"},s=r,i=o("2877"),l=Object(i["a"])(s,a,n,!1,null,null,null);e["a"]=l.exports},"8b24":function(t,e,o){"use strict";o.r(e);var a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("hero",[o("q-markdown",{attrs:{src:t.markdown,toc:""},on:{data:t.onToc}}),o("component-api",{attrs:{title:"QRibbon API",json:t.json}}),o("q-markdown",[t._v("\n# Donate\nIf you appreciate the work that went into this, please consider donating to [Quasar](https://donate.quasar.dev) or [Allan](https://github.com/sponsors/webnoob).\n\n---\n\nThis page created with [QMarkdown](https://quasarframework.github.io/app-extension-qmarkdown), another great Quasar App Extension.\n    ")]),o("q-page-scroller",{attrs:{position:"bottom-right","scroll-offset":150,offset:[18,18]}},[o("q-btn",{attrs:{fab:"",icon:"keyboard_arrow_up",color:"primary"}})],1)],1)},n=[],r=o("2514"),s="QRibbon (@quasar/qribbon)\n===\n\n> Please note, this is currently a work-in-progress (WIP).\n\nQRibbon is a [Quasar App Extension](https://quasar.dev/app-extensions/introduction). It allows you to display ribbons on your page.\n\n# Install\nTo add this App Extension to your Quasar application, run the following (in your Quasar app folder):\n\n```\nquasar ext add @quasar/qribbon\n```\n\n# Uninstall\nTo remove this App Extension from your Quasar application, run the following (in your Quasar app folder):\n\n```\nquasar ext remove @quasar/qribbon\n```\n\n# Describe\nYou can use `quasar describe QRibbon`\n\n# Source\nCan be found [here](https://github.com/quasarframework/app-extension-qribbon/).\n\n# Docs\nCan be found [here](https://quasarframework.github.io/app-extension-qribbon/).\n\n# Examples\nCan be found [here](https://quasarframework.github.io/app-extension-qribbon/examples).\n\n# Interactive Demo / QRibbon Builder\nCan be found [here](https://quasarframework.github.io/app-extension-qribbon/builder).\n\n# Demo (source) Project\nCan be found [here](https://github.com/quasarframework/app-extension-qribbon/tree/master/demo).\n",i=o("9cdd"),l={name:"PageIndex",components:{Hero:r["a"]},data:function(){return{markdown:s,json:i}},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(t){this.$store.commit("common/toc",t)}}},methods:{onToc:function(t){t.push({id:"QRibbon-API",label:"QRibbon API",level:1,children:Array(0)}),t.push({id:"Donate",label:"Donate",level:1,children:Array(0)}),this.toc=t}}},c=l,p=o("2877"),u=Object(p["a"])(c,a,n,!1,null,null,null);e["default"]=u.exports},"9cdd":function(t){t.exports=JSON.parse('{"type":"component","props":{"type":{"type":"String","category":"behavior","desc":"Tells the component which type of ribbon is to be used","default":"horizontal","values":["horizontal","corner","vertical"],"examples":["type=\\"horizontal\\"","type=\\"vertical\\""]},"position":{"type":"String","category":"behavior","desc":"Tells the component which position is to be used. If `horizontal`, then only `left` or `right` are applicable. Otherwise, the remaining positions can be used with `vertical` or `corner`","default":"`left` or `top-left`","values":["left","right","full","top left","top right","bottom left","bottom right"],"examples":["position=\\"left\\"","position=\\"top right\\""]},"color":{"type":"String","category":"style","desc":"Set the text color using any CSS color, Quasar Color or CSS var pointing to a color","default":"white","examples":["color=\\"orange-8\\"","color=\\"--blue-grey-6\\""]},"background-color":{"type":"String","category":"style","desc":"Set the background color using any CSS color, Quasar Color or CSS var pointing to a color","default":"#027BE3","examples":["background-color=\\"orange-8\\"","background-color=\\"--blue-grey-6\\""]},"leaf-color":{"type":"String","category":"style","desc":"CSS Color for the leaf","default":"Auto-shaded based on `background-color`","examples":["leaf-color=\\"#6A687A\\"","leaf-color=\\"#536271\\""]},"leaf-position":{"type":"String","category":"behavior","desc":"For `horizontal` use `top` or `bottom`, for `vertical` use `left` or `right`","default":"`bottom` or `left`","values":["top","bottom","left","right"],"examples":["leaf-position=\\"bottom\\"","leaf-position=\\"left\\""]},"size":{"type":"String","category":"style","desc":"Use `full` to full the container","default":"null","values":["null","full"],"examples":["size=\\"full\\""]},"decoration":{"type":"String","category":"style","desc":"The type of decoration to use with the ribbon. Cannot be used with `corner` type ribbon","default":"null","values":["null","rounded-in","rounded-out","point-in","point-out"],"examples":["decoration=\\"rounded-in\\"","decoration=\\"point-out\\""]},"inline":{"type":"Boolean","category":"behavior","desc":"Used when 2 QRibbons are required to be inline (on left and right along the same X axis). Both QRibbon\'s must be wrapped with the following: `<div class=\\"flex justify-between\\"></div>`"},"glow":{"type":"Boolean","category":"behavior","desc":"Add a moving glow to the ribbon"},"glow-speed":{"type":"Number","category":"behavior","desc":"The duration (in seconds) it takes for the animation to complete","default":"1.5","examples":[":glow-speed=\\"3\\"",":glow-speed=\\"1.75\\""]},"glow-iteration-count":{"type":"String","category":"behavior","desc":"A number or string representing how many times the animation will run","default":"infinite","examples":["glow-iteration-count=\\"infinite\\"","glow-iteration-count=\\"10\\""]}},"slots":{"default":{"desc":"Any content can be entered into the default slot and it will show in the ribbon"}}}')}}]);